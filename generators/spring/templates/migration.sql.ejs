CREATE TABLE <%=tableName%>
(
id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
uuid              UUID                                    NOT NULL,

<%_ fields.forEach(function(f){ _%>
    <%_ if(f.name != 'id' &&  f.name != 'uuid') { _%>

        <%_
            var type = 'VARCHAR(255)';
            if(f.dataType.includes('string') && f.dataType.includes(',')) {
               const stringMax = f.dataType.split(',')[1];
                type = 'VARCHAR('+stringMax+')';
            }
            if (f.dataType.includes('enum')) {
                type = 'VARCHAR(100)'
            }
           if (f.dataType.includes('bigint') || f.relation !=null && f.relation.includes('mt1')) {
              type = 'BIGINT'
            }
            if(f.relation ==null && f.dataType.includes('integer')) {
                 type = 'INTEGER'
             }
            if( f.dataType.includes('numeric') || f.dataType.includes('decimal')) {
                type = 'NUMERIC(14,2)'
            }
            if( f.dataType.includes('boolean')) {
                type = 'BOOLEAN'
            }
            if( f.dataType.includes('date')) {
                type = 'DATE'
            }
            if( f.dataType.includes('timestamp')) {
                type = 'TIMESTAMP'
            }
            if (f.dataType.includes('text')) {
                type = 'TEXT'
            }
        _%>
      <%= f.name %> <%= type %> <%=  (f.validations !== undefined && f.validations.includes('required')) ? 'NOT NULL' : '' %> ,
    <%_ } _%>
<%_ }); _%>

created_at        TIMESTAMP WITHOUT TIME ZONE,
created_by        VARCHAR(120),
updated_at        TIMESTAMP WITHOUT TIME ZONE,
updated_by        VARCHAR(120),
deleted_at        TIMESTAMP WITHOUT TIME ZONE,
deleted_by        VARCHAR(120),
CONSTRAINT pk_<%=tableName%> PRIMARY KEY (id),
CONSTRAINT uc_<%=tableName%>_uuid UNIQUE (uuid)
<%_ fields.forEach(function(f){ _%>
    <%_ if(f.validations  &&  f.validations.includes("unique")) { _%>
      ,CONSTRAINT uc_<%=tableName%>_<%=f.name%> UNIQUE (<%=f.name%>)
<%_ } _%>
<%_ }); _%>

<%_ relations.forEach(function(r){ _%>
    <%_ if (r.type === 'mt1') { _%>
      ,CONSTRAINT FK_<%=tableName%>_ON_<%=r.rlTableName%> FOREIGN KEY (<%=r.name%>) REFERENCES <%=r.rlTableName%> (id)
   <%_ } _%>
<%_ }); _%>

);
