import React from 'react';
import { useForm } from 'react-hook-form';
import { AppDialog } from '../shared/app-dialog';
import {
  AppInputSwitch,
  AppInputText,
  AppMultSelect,
  AppSelect,
  AppSubmitBtn,
} from '../shared/app-form-controls';

<%_ relations.forEach(function(r){ _%>
  <%_ if (r.rlSnake !== 'parent') { _%> 
  import { useFetch<%=r.rlCapPlural%> } from '../<%= r.rlSnake %>';
  <%_ } _%> 
<%_ }); _%>
import { <%= capEntityName %>, useCreateOrUpdate<%= capEntityName %> } from '.';

export const <%= capEntityName %>Update = ({ <%= camelEntityName %>, onClose, show }: any) => {
  const {
    control,
    formState: { errors },
    handleSubmit,
  } = useForm({
    defaultValues: <%= camelEntityName %>,
  });

  <%_ relations.forEach(function(r){ _%>
    const <%= r.rlCamelPlural %>Query = useFetch<%= (r.rlSnake === 'parent') ? capPluralEntityName : r.rlCapPlural   %>({
      queryParams: { columns: 'id,name' },
    });
  <%_ }); _%>

  const saveMutation = useCreateOrUpdate<%= capEntityName %>({
    onSuccess: () => onClose(true),
  });

  const onSubmit = async (data: <%= capEntityName %>) => saveMutation.mutate(data);

  return (
    <AppDialog
      show={show}
      onClose={onClose}
      header="Create or Update User"
      isError={saveMutation.isError}
      isSubmiting={saveMutation.isLoading}
      error={saveMutation.error}>
      <form onSubmit={handleSubmit(onSubmit)} className="p-fluid">
       <div className="flex flex-column gap-3 mt-4">
            <%_ fields.forEach(function(f){ _%>
              <%_ if (f.name != 'id' && f.relation === undefined && f.dataType !== 'enum' && !f.dataType.includes('boolean') && !f.dataType.includes('json')) { _%>
                <%_ if (f.dataType.includes('string')) { _%>
                    <AppInputText
                      control={control}
                      name="<%=f.camelName %>"
                      label="<%= f.header %>"
                      errors={errors}
                      <%_ if (f.validations !== undefined) { _%>
                        rules={{
                          <%_  if(f.validations.includes('required')){_%>
                            required: '<%= f.header %> is required',
                          <%_ } _%>
                        }}
                      <%_ } _%>
                    />
                  <%_ } _%>
                  <%_ if (f.dataType.includes('text')) { _%>
                    <AppTextarea rows={5} id={field.name} {...field} />
                  <%_ } _%>
                  <%_ if (f.dataType.includes('integer')) { _%>
                    /**{ not implemented}*/
                  <%_ } _%>
                  <%_ if (f.dataType.includes('decimal') || f.dataType.includes('double') || f.dataType.includes('float')) { _%>
                    /**{ not implemented}*/
                  <%_ } _%>
                  <%_ if (f.dataType.includes('date')) { _%>
                    /**{ not implemented}*/
                  <%_ } _%>
              <%_ } _%>
              
              <%_ if (f.name != 'id' && f.relation === undefined && f.dataType !== 'enum' && f.dataType.includes('boolean')) { _%>
                <AppInputSwitch  name="<%=f.camelName %>" control={control} label="<%= f.header %>" />
            <%_ } _%>
            <%_ }); _%>

            <%_ relations.forEach(function(r){ _%>
                    <%_ if (r.type === 'mt1') { _%> 
                      <AppSelect
                        control={control}
                        name="<%= r.rlCamelPlural %>"
                        label="<%= r.header %>"
                        optionLabel="name"
                        options={<%= r.rlCamelPlural %>Query.data?.data}
                        refetch={<%= r.rlCamelPlural %>Query.refetch}
                        isLoading={<%= r.rlCamelPlural %>Query.isLoading}
                      />
                    <% } else { %>
                      <AppMultSelect
                        control={control}
                        name="<%= r.rlCamel %>"
                        label="<%= r.header %>"
                        optionLabel="name"
                        options={<%= r.rlCamelPlural %>Query.data?.data}
                        refetch={<%= r.rlCamelPlural %>Query.refetch}
                        isLoading={<%= r.rlCamelPlural %>Query.isLoading}
                      />
                    <% }  %>
             <%_ }); _%>
           <AppSubmitBtn />
        </div>
      </form>
    </AppDialog>
  );
};
